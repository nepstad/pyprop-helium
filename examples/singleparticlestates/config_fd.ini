[Import]
files = ["sae_potential.ini"]

[Representation]
rank = 2
type = core.CombinedRepresentation_2
representation0 = "AngularRepresentation"
representation1 = "RadialRepresentation"

[AngularRepresentation]
type = core.SphericalHarmonicBasisRepresentation
index_iterator = FixedMLmIndexIterator(lmax=10, m=[0])

[RadialRepresentation]
type = core.CustomGridRepresentation
rank = 1
function = GetGridLinear
xmin = 0.0
xmax = 300.3
count = %(xmax)s / 0.3 - 1
include_left_boundary = False
include_right_boundary = False

[InitialCondition]
type = InitialConditionType.Function
function = lambda conf, x: 1.0 * (x[0] == 0)

[Propagation]
potential_evaluation = []
grid_potential_list = ["RadialKineticEnergy", "AngularKineticEnergy", "SAEPotential"]
propagator = PamPropagator
base_propagator = BasisPropagator
timestep = 0.01
duration = 10.0
renormalization = False
krylov_basis_size = 20
krylov_tolerance = 0
krylov_norm = 1e6
silent = True

[RadialKineticEnergy]
classname = "KineticEnergyPotential"
geometry0 = "Diagonal"
geometry1 = "bandeddistributed-5"
differentiation0 = 0
differentiation1 = 2
mass = 1
boundary_scaling1 = array([-3.2114571183919960, 0, 0])
offset1 = -2

[AngularKineticEnergy]
classname = "SphericalKineticEnergyEvaluator"
geometry0 = "Diagonal"
geometry1 = "Diagonal"
mass = 1
angular_rank = 0
radial_rank = 1

[SAEPotential]
base = "HeliumPlus"
type = PotentialType.RankOne
classname = "SingleActiveElectronPotential"
geometry0 = "Diagonal"
geometry1 = "Diagonal"
angular_rank = 0
radial_rank = 1

[OverlapMatrixPotential]
classname = "KineticEnergyPotential"
geometry0 = "Identity" 
geometry1 = "Diagonal"
mass = -0.5 #pot = -1/2m => pot = 1
