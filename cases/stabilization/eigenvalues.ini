[Representation]
rank = 3
type = core.CombinedRepresentation_3
representation0 = "AngularRepresentation"
representation1 = "RadialRepresentation"
representation2 = "RadialRepresentation"

[AngularRepresentation]
type = core.CoupledSphericalHarmonicRepresentation
index_iterator = DefaultCoupledIndexIterator(lmax=3, L=[0], M=[0])

[RadialRepresentation]
type = core.BSplineRepresentation
init_function = InitBSpline
xmin = 0.0
xmax = 25.0
xsize = 50
bpstype = 'linear'
continuity = 'zero'
order = 5
quad_order_additional = 0
projection_algorithm = 0
lapack_algorith = 1

[InitialCondition]
type = InitialConditionType.Function
function = lambda config, x: (x[1] + x[2]) * exp(- abs(x[1] + x[2]))

[Propagation]
potential_evaluation = []
grid_potential_list = ["RadialKineticEnergy1", "RadialKineticEnergy2", "AngularKineticEnergy", "CoulombPotential", "ElectronicCouplingPotential"]
propagator = CayleyPropagator
preconditioner =  "RadialPreconditioner"
base_propagator = BasisPropagator
timestep = 0.01
duration = 10
renormalization = False
krylov_basis_size = 20
krylov_tolerance = 0
silent = False

[RadialPreconditioner]
type = RadialTwoElectronPreconditionerIfpack
potential_evaluation = ["RadialKineticEnergy1", "RadialKineticEnergy2", "AngularKineticEnergy", "CoulombPotential", "ElectronicCouplingPotentialMonopoleTerm"]
cutoff = 0

[RadialKineticEnergy1]
classname = "KineticEnergyPotential"
geometry0 = "Diagonal" 
geometry1 = "banded-packed"
geometry2 = "banded-packed"
differentiation0 = 0
differentiation1 = 2
differentiation2 = 0
mass = 1

[RadialKineticEnergy2]
classname = "KineticEnergyPotential"
geometry0 = "Diagonal"
geometry1 = "banded-packed"
geometry2 = "banded-packed"
differentiation0 = 0
differentiation1 = 0
differentiation2 = 2
mass = 1

[AngularKineticEnergy]
classname = "CoupledSphericalKineticEnergyEvaluator"
geometry0 = "Diagonal"
geometry1 = "banded-packed"
geometry2 = "banded-packed"
angular_rank = 0
radial_rank1 = 1
radial_rank2 = 2
mass = 1

[ElectronicCouplingPotential]
classname = "CustomPotentialEvaluationR12"
geometry0 = "SelectionRule_R12"
geometry1 = "banded-packed"
geometry2 = "banded-nonhermitian"
angular_rank = 0
radial_rank1 = 1
radial_rank2 = 2

[ElectronicCouplingPotentialMonopoleTerm]
classname = "CustomPotentialEvaluationR12"
geometry0 = "Diagonal"
geometry1 = "banded-packed"
geometry2 = "banded-packed"
angular_rank = 0
radial_rank1 = 1
radial_rank2 = 2

[CoulombPotential]
classname = "CoupledSphericalCoulombPotential"
geometry0 = "Diagonal" 
geometry1 = "banded-packed"
geometry2 = "banded-packed"
radial_rank1 = 1
radial_rank2 = 2
z = 2

[OverlapPotential]
classname = "OverlapPotential"
geometry0 = "Diagonal"
geometry1 = "banded-packed"
geometry2 = "banded-packed"

[Arpack]
krylov_eigenvalue_count = 5
krylov_basis_size = 15
krylov_tolerance = 1e-12
krylov_max_iteration_count = 500
krylov_use_random_start = True
counter_on = True
krylov_debug = True
shift = -2.9

[Anasazi]
krylov_tolerance = 1e-10
krylov_eigenvalue_count = 10
krylov_max_iteration_count = 5000
krylov_use_random_start = True
counter_on = True
krylov_debug = True
shift = -2.9

generalized_eigenvalue_problem = True
orthogonalization = "SVQB" #"DGKS"

inverse_iterations = False
krylov_method = "Davidson"
preconditioner = "RadialPreconditioner"
krylov_block_size = 12
krylov_block_count = 25
krylov_which = "SR"
krylov_locking = True
krylov_locking_tolerance = 1e-10

print_warnings = True
print_iteration_details = True
print_ortho_details = False
print_final_summary = True
print_timing_details = True
print_statustest_details = False
print_debug = False
print_errors = False

[GMRES]
krylov_basis_size = 20
krylov_tolerance = 0
shift = -2.9
preconditioner =  "RadialPreconditioner"

