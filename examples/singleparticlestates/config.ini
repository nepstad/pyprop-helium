[Import]
files = ["sae_potential.ini"]

[Representation]
rank = 2
type = core.CombinedRepresentation_2
representation0 = "AngularRepresentation"
representation1 = "RadialRepresentation"

[AngularRepresentation]
type = core.SphericalHarmonicBasisRepresentation
index_iterator = FixedMLmIndexIterator(lmax=10, m=[0])

[RadialRepresentation]
type = core.BSplineRepresentation
init_function = InitBSpline
xmin = 0.0
xmax = 250.0
xsize = 20
gamma = 2.5
joinpoint = 0
bpstype = 'exponentiallinear'
continuity = 'zero'
xpartition = 8
order = 5
quad_order_additional = 0
projection_algorithm = 0

[InitialCondition]
type = InitialConditionType.Function
function = lambda conf, x: 1.0 * (x[0] == 0)

[Propagation]
potential_evaluation = []
grid_potential_list = ["RadialKineticEnergy", "AngularKineticEnergy", "SAEPotential"]
propagator = PamPropagator
base_propagator = BasisPropagator
timestep = 0.01
duration = 10.0
renormalization = False
krylov_basis_size = 20
krylov_tolerance = 0
krylov_norm = 1e6
silent = True

[RadialKineticEnergy]
classname = "KineticEnergyPotential"
geometry0 = "Diagonal"
geometry1 = "banded-nonhermitian"
differentiation0 = 0
differentiation1 = 2
mass = 1

[AngularKineticEnergy]
classname = "SphericalKineticEnergyEvaluator"
geometry0 = "Diagonal"
geometry1 = "banded-nonhermitian"
mass = 1
angular_rank = 0
radial_rank = 1
angular_rank = 0

[SAEPotential]
base = "HeliumPlus"
type = PotentialType.RankOne
classname = "SingleActiveElectronPotential"
geometry0 = "Diagonal"
geometry1 = "banded-nonhermitian"
radial_rank = 1
angular_rank = 0

[OverlapMatrixPotential]
classname = "KineticEnergyPotential"
geometry0 = "Identity" 
geometry1 = "banded-nonhermitian"
mass = -0.5 #pot = -1/2m => pot = 1
